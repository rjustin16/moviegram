[{"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\index.js":"1","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\App.js":"2","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\index.js":"3","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\styles.js":"4","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\actions\\posts.js":"5","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Posts.js":"6","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Form\\Form.js":"7","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\posts.js":"8","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\styles.js":"9","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Form\\styles.js":"10","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Post.js":"11","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\api\\index.js":"12","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\styles.js":"13","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\constants\\actionTypes.js":"14","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Navbar\\Navbar.js":"15","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Navbar\\styles.js":"16","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Home\\Home.js":"17","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\Auth.js":"18","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\styles.js":"19","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\Input.js":"20","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\icon.js":"21","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\auth.js":"22","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\actions\\auth.js":"23","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\search.js":"24","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Search\\movieSearch.js":"25","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Search\\styles.js":"26","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Reactions.js":"27"},{"size":461,"mtime":1611292111620,"results":"28","hashOfConfig":"29"},{"size":697,"mtime":1611543491180,"results":"30","hashOfConfig":"29"},{"size":150,"mtime":1611376111717,"results":"31","hashOfConfig":"29"},{"size":464,"mtime":1611347104123,"results":"32","hashOfConfig":"29"},{"size":1578,"mtime":1611543549493,"results":"33","hashOfConfig":"29"},{"size":782,"mtime":1611684622009,"results":"34","hashOfConfig":"29"},{"size":2611,"mtime":1611684991193,"results":"35","hashOfConfig":"29"},{"size":490,"mtime":1611347831580,"results":"36","hashOfConfig":"29"},{"size":414,"mtime":1611684497868,"results":"37","hashOfConfig":"29"},{"size":570,"mtime":1611606510966,"results":"38","hashOfConfig":"29"},{"size":3080,"mtime":1611606012981,"results":"39","hashOfConfig":"29"},{"size":996,"mtime":1611555926137,"results":"40","hashOfConfig":"29"},{"size":963,"mtime":1611287510378,"results":"41","hashOfConfig":"29"},{"size":284,"mtime":1611543643809,"results":"42","hashOfConfig":"29"},{"size":2649,"mtime":1611543349009,"results":"43","hashOfConfig":"29"},{"size":950,"mtime":1611351604501,"results":"44","hashOfConfig":"29"},{"size":1285,"mtime":1611601595985,"results":"45","hashOfConfig":"29"},{"size":4762,"mtime":1611543906158,"results":"46","hashOfConfig":"29"},{"size":664,"mtime":1611368633582,"results":"47","hashOfConfig":"29"},{"size":1121,"mtime":1611543549493,"results":"48","hashOfConfig":"29"},{"size":510,"mtime":1611373664782,"results":"49","hashOfConfig":"29"},{"size":507,"mtime":1611378004873,"results":"50","hashOfConfig":"29"},{"size":584,"mtime":1611543777170,"results":"51","hashOfConfig":"29"},{"size":1005,"mtime":1611543529661,"results":"52","hashOfConfig":"29"},{"size":4179,"mtime":1611543616268,"results":"53","hashOfConfig":"29"},{"size":558,"mtime":1611543549493,"results":"54","hashOfConfig":"29"},{"size":1999,"mtime":1611543549493,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1u5t31m",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\index.js",[],["117","118"],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\App.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\index.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\styles.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\actions\\posts.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\posts.js",["119"],"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post);\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Form\\styles.js",["120"],"  \nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  empty:{\n    display: \"none\",\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  fileInput: {\n    width: \"97%\",\n    margin: \"10px 0\",\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Post.js",["121"],"import React  from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport {StoreContext} from \"../../../reducers/search\"\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deletePost,\n  likePost,\n  dislikePost,\n  watchPost,\n} from \"../../../actions/posts\";\nimport { Likes, DisLikes, Watches } from \"./Reactions.js\";\nconst Post = ({ post, setCurrentId }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={post.imageUrl}\n        title={post.title}\n      />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.name}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div className={classes.overlay2}>\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button\n            style={{ color: \"white\" }}\n            size=\"small\"\n            onClick={() => setCurrentId(post._id)}\n          >\n            <MoreHorizIcon fontSize=\"default\" />\n          </Button>\n        )}\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\n        {post.title}\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.synopsis}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user?.result}\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <Likes post={post} user={user} />\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user?.result}\n          onClick={() => dispatch(dislikePost(post._id))}\n        >\n          <DisLikes post={post} user={user} />\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user?.result}\n          onClick={() => dispatch(watchPost(post._id))}\n        >\n          <Watches post={post} user={user} />\n        </Button>\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => dispatch(deletePost(post._id))}\n          >\n            <DeleteIcon fontSize=\"small\" />\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\api\\index.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Navbar\\Navbar.js",["122","123"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { AppBar, Avatar, Button, Typography, Toolbar } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\nimport useStyles from \"./styles\";\r\nimport icon from \"../../images/movie-night.png\";\r\nimport { useStoreContext } from \"../../reducers/search\";\r\nimport { CLEAR_SEARCH } from \"../../constants/actionTypes\";\r\n\r\nconst Navbar = () => {\r\n  const [state, clearState] = useStoreContext();\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const logout = () => {\r\n    clearState({\r\n      type: CLEAR_SEARCH,\r\n    });\r\n\r\n    dispatch({ type: \"LOGOUT\" });\r\n    history.push(\"/\");\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <Typography\r\n          component={Link}\r\n          to=\"/\"\r\n          className={classes.heading}\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n        >\r\n          Moviegram\r\n        </Typography>\r\n        <img className={classes.image} src={icon} alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user ? (\r\n          <div className={classes.profile}>\r\n            <Avatar\r\n              className={classes.purple}\r\n              alt={user.result.name}\r\n              src={user.result.imageUrl}\r\n            >\r\n              {user.result.name.charAt(0)}\r\n            </Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">\r\n              {user.result.name}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.logout}\r\n              color=\"secondary\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button\r\n            component={Link}\r\n            to=\"/auth\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Auth\\icon.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\actions\\auth.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\reducers\\search.js",[],"C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Search\\movieSearch.js",["124","125"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, List } from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { useStoreContext } from \"../../reducers/search\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { API_CALL, CLEAR_SEARCH } from \"../../constants/actionTypes\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { createPost } from \"../../actions/posts\";\r\n\r\nconst MovieSearch = ({ currentId, setCurrentId }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [state, apiDispatch] = useStoreContext();\r\n  const [movieName, setmovieName] = useState({\r\n    title: \"\",\r\n  });\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    synopsis: \"\",\r\n    tags: \"\",\r\n    imageUrl: \"\",\r\n  });\r\n\r\n  const Base_URL = \"https://www.omdbapi.com/?apikey=461e66e0&s=\";\r\n  const Title_URL = \"https://www.omdbapi.com/?apikey=461e66e0&i=\";\r\n\r\n  const handleApiSubmit = (e) => {\r\n    e.preventDefault();\r\n    const query = Base_URL + movieName.title;\r\n\r\n    fetch(query)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.Search.length > 0) {\r\n          apiDispatch({\r\n            type: API_CALL,\r\n            payload: data,\r\n          });\r\n        }\r\n        console.log(state);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setmovieName({ title: \"\" });\r\n  };\r\n\r\n  const handleMovieSelect = ({ imdbID }) => {\r\n    const query = Title_URL + imdbID;\r\n\r\n    fetch(query)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        if (currentId === 0) {\r\n          const postData2 = {\r\n            title: data.Title,\r\n            synopsis: data.Plot,\r\n            tags: data.Genre.split(\", \"),\r\n            imageUrl: data.Poster,\r\n          };\r\n\r\n          dispatch(createPost({ ...postData2, name: user?.result?.name }));\r\n          clear();\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setmovieName({ title: \"\" });\r\n  };\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      title: \"\",\r\n      synopsis: \"\",\r\n      tags: \"\",\r\n      imageUrl: \"\",\r\n    });\r\n    apiDispatch({\r\n      type: CLEAR_SEARCH,\r\n    });\r\n  };\r\n\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to participate in the Watchlist\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleApiSubmit}\r\n      >\r\n        <Typography variant=\"h6\">Search for a Movie</Typography>\r\n        <TextField\r\n          name=\"movie\"\r\n          variant=\"outlined\"\r\n          label=\"Enter movie name here...\"\r\n          fullWidth\r\n          value={movieName.title}\r\n          onChange={(e) =>\r\n            setmovieName({ ...movieName, title: e.target.value })\r\n          }\r\n        />\r\n\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n      <List\r\n        component=\"nav\"\r\n        className={classes.root}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {state.searchResults.map((movie) => (\r\n          <ListItem\r\n            divider\r\n            key={movie.imdbID}\r\n            button\r\n            onClick={() => {\r\n              handleMovieSelect(movie);\r\n            }}\r\n          >\r\n            <ListItemText primary={movie.Title + \" \" + movie.Year} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MovieSearch;","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Search\\styles.js",["126"],"import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));","C:\\Users\\Ricky\\code\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Reactions.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":1,"nodeType":"133","endLine":17,"endColumn":3},{"ruleId":"134","severity":1,"message":"135","line":28,"column":3,"nodeType":"136","messageId":"137","endLine":28,"endColumn":7},{"ruleId":"138","severity":1,"message":"139","line":10,"column":9,"nodeType":"140","messageId":"141","endLine":10,"endColumn":21},{"ruleId":"138","severity":1,"message":"142","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":38,"column":6,"nodeType":"145","endLine":38,"endColumn":16,"suggestions":"146"},{"ruleId":"138","severity":1,"message":"147","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"148","line":21,"column":10,"nodeType":"140","messageId":"141","endLine":21,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":24,"column":3,"nodeType":"136","messageId":"137","endLine":24,"endColumn":7},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","no-unused-vars","'StoreContext' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["151"],"'useEffect' is defined but never used.","'postData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"154","text":"155"},[1206,1216],"[location, logout, user?.token]"]